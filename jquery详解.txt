var scrolls = $(this).scrollTop();//获取滚动条的高度
$(function(){
$('.tvNat ul li').mouseover(function(){  //对选择的对象加事件
	$('.tvNat ul li').removeClass('active'); //删除指定class
	$(this).addClass('active');    //对当前的对象添加指定class
	var index=$('.tvNat ul li').index(this) //当前对象的位置
	$('.tv_l .leftArea').removeClass('show');
	$('.tv_l .leftArea').eq(index).addClass('show');
})

});

add(selector)		//增加匹配元素
index()			//当前元素相对于其他匹配元素的位置
html()      		//获取标记中所有内容
html(变量)  		//设置标记中的内容
text(）    		//获取标记中的文本内容
text(变量） 		//设置标记中的文本内容
attr(属性名)            //获取标签的属性值
attr(属性名，属性值)    //设置标签的属性值
val()			//获取value值
val(变量)		//设置value值
remove()		//删除所选的目标
remove(selector)	//删除目标所选的属性
empty()			//清空节点中的内容
clone()			//复制节点不复制行为
clone(ture)		/复制节点并且复制行为
css(属性)		//获取指定的属性
css(属性，属性值)	//设置指定属性
css({属性1:属性值,属性2：属性值})//设置指定属性
addClass(class)		//添加一个指定class
removeClass(class)	//删除一个指定class
find(标签)		//找到指定标签
next()			//所标记标签的下一个标签
hover(enter,leave)	//模拟光标悬停事件
toggle(fn1,fn2...)	//模拟鼠标连续单击事件
eq(index)  	//找到指定位置的元素
eval(string)	//将字符串转化为javascript数据

filter()		//选择符合条件的对象

animate({height:"300px"})//属性值运动改变
animate(styles,speed,easing,callback)//callback是执行完后要执行的函数

例子:$('#div').animate({'width':'100px','height':'100px'},1000,'linear',callback)
	//id为div的元素会在1秒内宽高变为100像素，达到后执行回调函数



$(document).ready(function(){})
		//可简写$(function(){})		等待dom元素加载完毕

jquery对象,dom对象
jquery对象只能使用jquery方法，dom对象只能使用dom方法
jquery对象一般在前面加$
jquery对象是一个类似数组的对象

var aa=$aa[0]  //把jquery对象转化为dom对象
var $aa=$(aa)   //把dom对象转化为jquery对象


选择器(css选择器)

1、基本过滤选择器

div:first    	//选择所有div元素中第一个div元素
div:last     	//选择所要div元素中最后一个div元素
div:not(.myclass) //选择class不是myclass的div元素
div:even   	//选择索引为偶数的div元素,索引从0开始
div:odd    	//选择索引为奇数的div元素,索引从0开始
div:eq(1)  	//选择索引为1的div元素
div.gt(1)  	//选择索引大于1的div元素，不包含1
div.lt(1)  	//选择索引小于1的div元素，不包含1
div:header  	//选择div中所有的h1,h2,h3...元素
div:animated  	//选择当前正在执行动画的div元素
div:focus	//选择当前获取焦点的div元素

2、内容过滤选择器

div:contains("我")//选择含有文本‘我’的div元素
div:empty	//选择不包含子元素和文本元素的div元素
div:has(p)	//选择包含p元素的div元素
div:parent	//选择拥有子元素的div元素

3、可见性过滤选择器

div:hidden	//选择所有不可见的div元素
div:visible	//选择所有可见的div元素

4、属性过滤选择器

div[id]		  //选择拥有id属性的div元素
div[title=test]	  //选择属性title为'test'的div元素
div[title!=test]  //选择属性title不是'test'的div元素,没有也会被选择
div[title^=test]  //选择属性title以'test'开始的div元素
div[title$=test]  //选择属性title以'test'结尾的div元素
div[title*=test]  //选择属性title中含有'test'的div元素
div[title|=test]  //选择属性title等于'test'或以'test'为前缀的div元素

5、子元素过滤器

div p:nth-child(1)    //选择每一个div元素的第一个p元素
div p:nth-child(even) //索引为偶数
div p:nth-child(odd)  //索引为奇数
div p:nth-child(3n)   //索引是3的倍数
div:first-child	    //选择每一个div元素的第一个子元素
div:last-child	    //选择每一个div元素的最后一个子元素
div:only-child	    //如果div是它父元素唯一一个子元素，则匹配

6、表单对象属性过滤选择器

form:enabled	//选择表单中所有可用元素
form:disabled	//选择表单中所有不可用元素
input:checked	//选择所有被选中的input
select option:selected	//选择所有被选中的选项

:input 	//选择所有的input元素
:text	//选择所有的文本框

$('p','.div1')	//选择类div1中的p元素

jquery DOM操作


创建节点

$('<li></li>')	//创建一个li元素

插入节点

append($li)	//在尾部插入元素
appendTo($ul)	//在ul中加入匹配元素

prepend($li)	//在头部插入元素
prependTo($ul)	//在ul中加入匹配元素

after($li)	//在匹配元素的后面加入元素
insertAfter($ul)//将匹配元素插入到ul后面

insertBefore($ul)//将匹配元素插入到ul前面
before($li)	//在匹配元素的前面加入元素

删除节点

remove()	//把匹配元素从dom中删除

复制节点

clone()		//复制匹配节点
clone(true)	//复制匹配节点，并且具有行为和绑定的事件

替换节点

replaceWith(html) 	//把匹配元素替换为指定的html或dom元素
replaceAll(html)	//将指定元素替换为匹配元素

包裹节点

wrap(html)		//用html字符串包裹匹配元素,例如'<div>'

属性操作

attr(name)	//获取属性name的值
attr(name,value)//设置属性name的值
attr({name1:value1,name2:value2})//设置多个属性的值

prop(name)	//获取元素对象的属性的值
		//用prop来设置input的checked属性

对于HTML元素本身就带有的固有属性，在处理时，使用prop方法
对于HTML元素我们自己自定义的DOM属性，在处理时，使用attr方法

删除属性

removeAttr(name)//删除属性name

样式操作

addClass(class)	//添加指定class
removeClass(class)//删除指定class

toggleClass(class)//如果含有指定class，则删除，没有，则添加

hasClass(class)	//判断是否含有指定class

css('color')	//获取匹配元素的字体颜色
css('color','red')//设置匹配元素的字体颜色为红色
css({'fontSize':'30px','color':'red'})//设置多个样式

获取内容和值

html()		//获取匹配元素的html内容
text()		//获取匹配元素的文本内容
val()		//获取输入框的value值
val(a)		//设置输入框的value值,
		//还能让select,checkbox,radio选框相应的选项被选中

width()		//获取匹配元素的宽度
height()	//获取匹配元素的高度

width(num)	//设置匹配元素的宽度
height(num)	//设置匹配元素的高度

offset()	//获取匹配元素在当前视窗的相对偏移
offset().left	//左偏移
offset().top	//上偏移

position()	//获取匹配元素与最近定位父元素的相对偏移
position().left	//左偏移
position().top	//上偏移

scrollTop()	//获取匹配元素的滚动条距离顶端的距离
scrollLeft()	//获取匹配元素的滚动条距离左侧的距离

例子:
<input type="checkbox" value="ch1">
<input type="checkbox" value="ch2">
val('ch1')	//可以让checkbox被选中
val(['ch1','ch2'])	//可以让多个checkbox同时被选中

遍历节点

children()	//取得匹配元素的子元素集合
next()		//取得匹配元素后面紧邻的同辈元素
prev()		//取得匹配元素前面紧邻的同辈元素
siblings()	//取得匹配元素前后所有的同辈元素
parent()	//取得每一个匹配元素的父级元素

事件

hover(enterFn,leaveFn)	//当鼠标移动到发生,离开发生

toggle(fn1,fn2,fn3..)	//第一次点击发生fn1,第二次发生fn2,以此循环

event.which	//1-鼠标左键	2-鼠标中键	3-鼠标右键

unbind('click')	//移除匹配对象的点击事件

方法

show()	//显示匹配元素
show(1000)//1秒后显示元素

hide()	//隐藏匹配
hide(1000)//1秒后隐藏元素

toggle()  //切换匹配元素显示状态，如果可见则隐藏，隐藏则显示
fadeToggle()	//用淡入淡出切换元素显示状态


fadeIn()//在一段时间让匹配元素的不透明度慢慢变大
fadeOut()//在一段时间让匹配元素的不透明度慢慢变小

slideUp()//让匹配元素从下至上缩短隐藏
slideDown()//当匹配元素从上至下延伸显示

animate({'height':'300px'},5000)//在5秒内让匹配元素的高度变为300像素
animate({'height':'+=50px'},5000)//每一次执行高度加50像素

Jquery中的Ajax

load(url,date,callback)	//载入外部html文件
			//url为请求html的地址
			//date(可选),发送至服务器的key/value数据
			//callback(可选),请求完成时执行的函数

例子:
$('body').load('a.html')//把a.html的内容加入到body
$('body').load('a.html .myclass')//把a.html中类为myclass的元素加入body

$.get(url,date,callback,type) //用get方式进行异步请求
			      //type为服务器端返回数据的格式

$.post(url,date,callback,type)

$.ajax(对象字面量)	//一个参数包括所有信息

其中有:
属性		类型		说明
url		string		发送请求的地址
type		string		请求的方式，默认为get
timeout		number		设置请求超时时间
data		object/string	发送到服务器的数据
dataType	string		预期服务器返回的数据类型
beforeSend	function	发送请求前修改XMLHttpRequest对象的函数	
complete	function	请求完成后调用的函数，不管成功失败
success		function	请求成功后调用的函数,参数data
error		function	请求失败后调用的函数
global		boolean		是否触发全局ajax事件,默认为true

ajax全局事件方法

ajaxComplete(callback)		ajax请求完成时执行的函数
ajaxError(callback)		ajax请求失败时执行的函数
ajaxSend(callback)		ajax请求发送前执行的函数
ajaxSuccess(callback)		ajax请求成功时执行的函数




eval(string)	//把字符串转化为JavaScript对象

要转化为json: eval('('+string+')')

$.each(object,function(index,value){})	//遍历对象
					//object是遍历的对象
					//index是当前属性名
					//value是当时属性的值


$(a).each(function(a,b){})	
变成
$.each($(a),function(a,b){})

第一个参数是索引或者属性，第二个参数是值


is(a) 			//判断是否符合a条件，如果符合返回true


$('#test').is(':visible')	// 是否是隐藏的

$('input').is(':checked')	// 判断input元素是否被选中

$(this).is(":first-child")	// 是否是第一个子元素

$(this).is(".blue,.red")	// 是否包含.blue,.red的class

$(this).is(":contains('Peter')")// 文本中是否包含Peter这个词

brower对象

var str='浏览器名称为:'
if($.brower.msie){
	str+='IE';
}
if($.brower.mozilla){
	str+='Mozilla FireFox';
}		

str+=' 版本号为:'+$.brower.version;
alert(str)		//
